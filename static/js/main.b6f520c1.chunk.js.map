{"version":3,"sources":["resources/matheus.jpg","pages/index.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Layout","Footer","Content","Sider","Home","className","xs","sm","md","lg","style","paddingTop","type","textAlign","size","src","foto","color","span","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b6f520c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/matheus.a5712ebd.jpg\";","import React from 'react';\nimport { DatePicker, Button, Layout, Row, Col, Tag, Badge, Avatar, Card } from 'antd';\nimport foto from '../resources/matheus.jpg';\nimport { findByLabelText } from '@testing-library/react';\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction Home() {\n    return (\n        <Layout>\n            <Header>\n                <Row>\n                    <Col className=\"background-header\" xs={24} sm={24} md={18} lg={20}> <h3 className=\"text-branco\">Matheus Veras</h3></Col>\n                    <Col className=\"background-header\" xs={24} sm={24} md={6} lg={4}> <p className=\"text-branco\">+55 (85) 994440771</p></Col>\n                </Row>\n            </Header>\n            <Content>\n                <Row className=\"background-bio padding-content\">\n\n                    <Col style={{ paddingTop: 20 }} xs={24} sm={24} md={8} lg={8}>\n                        <h2>Introdução:</h2>\n                        <p>Full Stack Developer / UI UX / .Net / Javascript com 14 anos de experiência.\n                          Conhecimentos avançados em design (ON e OFF) e softwares como Illustrator e Photoshop</p>\n                        <h2>Contatos:</h2>\n                        <p>+55 (85) 994440771 ou matheus.veras@lobofrontal.com.br</p><br />\n\n                    </Col>\n                    <Col type=\"flex\" style={{ textAlign: 'center', paddingTop: 30 }} xs={24} sm={24} md={8} lg={8}>\n                        <Avatar size={204} src={foto} />\n                    </Col>\n                    <Col xs={24} sm={24} md={8} lg={8}>\n                        <Row>\n                            <Row>\n                                <p className=\"text-stacks\" >Desenvolvimento / Stack</p>\n                            </Row>\n                            <Row>\n                                <Card>\n                                    <Tag color=\"#108ee9\">React</Tag>\n                                    <Tag color=\"#108ee9\">React Native</Tag>\n                                    <Tag color=\"#87d068\">Node</Tag>\n                                    <Tag color=\"#444\">Flutter</Tag>\n                                    <Tag color=\"#f50\">.Net/.Net Core</Tag>\n                                </Card>\n                            </Row>\n                        </Row>\n                        <Row>\n                            <Row span={24}>\n                                <p className=\"text-stacks\" >Cloud / Infraestrurua</p>\n                            </Row>\n                            <Row span={24}>\n                                <Card>\n                                    <Tag color=\"#87d068\">Amazom AWS</Tag>\n                                    <Tag color=\"#87d068\">Microsoft Azure</Tag>\n                                    <Tag color=\"#444\">Google Cloud Platform</Tag>\n                                </Card>\n                            </Row>\n                        </Row>\n                        <Row>\n                            <Row span={24}>\n\n                                <p className=\"text-stacks\" >Banco de dados</p>\n\n\n                            </Row>\n                            <Row>\n                                <Card>\n                                    <Tag color=\"#f50\">SQL Server</Tag>\n                                    <Tag color=\"#87d068\">Oracle</Tag>\n                                    <Tag color=\"#87d068\">PostGres</Tag>\n                                    <Tag color=\"#108ee9\">AWS/RDS</Tag>\n                                    <Tag color=\"#87d068\">MySQL</Tag>\n                                    <Tag color=\"#444\">Firebase</Tag>\n                                </Card>\n                            </Row>\n                        </Row>\n                        <Row>\n                            <Row>\n\n                                <p className=\"text-stacks\">Desigin / UI/UX</p>\n\n                            </Row>\n                            <Row>\n                            <Card>\n                                <Tag color=\"#108ee9\">Adobe XD</Tag>\n                                <Tag color=\"#f50\">Illustrator</Tag>\n                                <Tag color=\"#f50\">PhotoShop</Tag>\n                                <Tag color=\"#444\">Sketch</Tag>\n                            </Card>\n                            </Row>\n                        </Row>\n                        <Row className=\"legenda-espaco\">\n                           \n                            <p className=\"dezanosmais\"> Legendas:  </p>\n                            <p className=\"dezanosmais\"> 10 anos + / </p>\n                            <p className=\"cincoanosmais\"> 5 anos + / </p>\n                            <p className=\"tresanosmais\"> 3 anos + / </p>\n                            <p className=\"umano\">1 ano</p>\n\n                        </Row>\n\n\n                    </Col>\n\n                </Row>\n            </Content>\n            <Footer>Footer</Footer>\n        </Layout >\n    );\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './pages';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nimport './resources/resume.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}